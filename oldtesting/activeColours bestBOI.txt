for surface in surfaces:
back
left
front
right
top
bottom

need to change class cubie function draw(self, verticies)
identify if corner / middle edge / middle piece

3**3 = 27 cubes

Min,Max = -1,2

init order:

LEFT, BOTTOM, B/M/F (BACK MIDDLE FRONT (Z-axis))
0 -1 -1 -1 = -2.06 -2.06 -2.06
1 -1 -1 0 = -2.06 -2.06 0.0
2 -1 -1 1 = -2.06 -2.06 2.06

LEFT, MIDDLE, B/M/F (BACK MIDDLE FRONT (Z-axis))
3 -1 0 -1 = -2.06 0.0 -2.06
4 -1 0 0 = -2.06 0.0 0.0
5 -1 0 1 = -2.06 0.0 2.06

LEFT, TOP, B/M/F (BACK MIDDLE FRONT (Z-axis))
6 -1 1 -1 = -2.06 2.06 -2.06
7 -1 1 0 = -2.06 2.06 0.0
8 -1 1 1 = -2.06 2.06 2.06

MIDDLE, BOTTOM, B/M/F (BACK MIDDLE FRONT (Z-axis))
9 0 -1 -1 = 0.0 -2.06 -2.06
10 0 -1 0 = 0.0 -2.06 0.0
11 0 -1 1 = 0.0 -2.06 2.06

MIDDLE, MIDDLE, B/M/F (BACK MIDDLE FRONT (Z-axis))
12 0 0 -1 = 0.0 0.0 -2.06
13 0 0 0 = 0.0 0.0 0.0
14 0 0 1 = 0.0 0.0 2.06

MIDDLE, RIGHT, B/M/F (BACK MIDDLE FRONT (Z-axis))
15 0 1 -1 = 0.0 2.06 -2.06
16 0 1 0 = 0.0 2.06 0.0
17 0 1 1 = 0.0 2.06 2.06

TOP, LEFT, B/M/F (BACK MIDDLE FRONT (Z-axis))
18 1 -1 -1 = 2.06 -2.06 -2.06
19 1 -1 0 = 2.06 -2.06 0.0
20 1 -1 1 = 2.06 -2.06 2.06

TOP, MIDDLE, B/M/F (BACK MIDDLE FRONT (Z-axis))
21 1 0 -1 = 2.06 0.0 -2.06
22 1 0 0 = 2.06 0.0 0.0
23 1 0 1 = 2.06 0.0 2.06

TOP, RIGHT, B/M/F (BACK MIDDLE FRONT (Z-axis))
24 1 1 -1 = 2.06 2.06 -2.06
25 1 1 0 = 2.06 2.06 0.0
26 1 1 1 = 2.06 2.06 2.06

COLOURSSSSSSSSSSSS
IF IT INCLUDES A 0 IT IS AN EDGE

(-1, -1, -1) CORNER - color LEFT BOTTOM BACK
(-1, -1, 0) EDGE    - color LEFT BOTTOM
(-1, -1, 1) CORNER  - color LEFT BOTTOM FRONT

(-1, 0, -1) EDGE    - color BOTTOM BACK
(-1, 0, 0) EDGE     - color BOTTOM
(-1, 0, 1) EDGE     - color BOTTOM FRONT

(-1, 1, -1) CORNER  - color RIGHT BOTTOM BACK
(-1, 1, 0) EDGE     - color RIGHT BOTTOM
(-1, 1, 1) CORNER   - color RIGHT BOTTOM FRONT

(0, -1, -1) EDGE    - color LEFT BACK
(0, -1, 0) EDGE     - color 
(0, -1, 1) EDGE

(0, 0, -1) EDGE
(0, 0, 0) CENTER CUBE - color NONE
(0, 0, 1) EDGE

(0, 1, -1) EDGE
(0, 1, 0) EDGE
(0, 1, 1) EDGE

(1, -1, -1) CORNER
(1, -1, 0) EDGE
(1, -1, 1) CORNER

(1, 0, -1) EDGE
(1, 0, 0) EDGE
(1, 0, 1) EDGE

(1, 1, -1) CORNER
(1, 1, 0) EDGE
(1, 1, 1) CORNER

yxz
START					       NEXT

B        0(-1, -1, -1)#   9(-1, 0, -1)^  18(-1, 1, -1)#        BACK
T        1(-1, -1, 0)^   10(-1, 0, 0)*   19(-1, 1, 0)^         MIDDLE
M        2(-1, -1, 1)#   11(-1, 0, 1)^   20(-1, 1, 1)#         FRONT

NEXTÂ²

M        3(0, -1, -1)^   12(0, 0, -1)*   21(0, 1, -1)^         BACK
I        4(0, -1, 0)*    13(0, 0, 0)**   22(0, 1, 0)*          MIDDLE
D        5(0, -1, 1)^    14(0, 0, 1)*    23(0, 1, 1)^          FRONT



T        6(1, -1, -1)#   15(1, 0, -1)^   24(1, 1, -1)#        BACK
O        7(1, -1, 0)^    16(1, 0, 0)*    25(1, 1, 0)^         MIDDLE
P        8(1, -1, 1)#    17(1, 0, 1)^    26(1, 1, 1)#         FRONT


					       END
 
0 -1 -1 -1
1 -1 -1 0
2 -1 -1 1

3 -1 0 -1
4 -1 0 0
5 -1 0 1

6 -1 1 -1
7 -1 1 0
8 -1 1 1

9 0 -1 -1
10 0 -1 0
11 0 -1 1

12 0 0 -1
13 0 0 0
14 0 0 1

15 0 1 -1
16 0 1 0
17 0 1 1

18 1 -1 -1
19 1 -1 0
20 1 -1 1

21 1 0 -1
22 1 0 0
23 1 0 1

24 1 1 -1
25 1 1 0
26 1 1 1










# corners
^ edges
* middles (self.center)
** center


BROKEN
corner center(middle) edge
19 1 -1 0 False True False
22 1 0 0  False True False
25 1 1 0  False True False



new corner,
FIXED
correct output:
22 1 0 0 False True False



blue red green white orange yellow














[
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
]


[
[(1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0), (0, 1, 0)]
[(1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0), (0, 1, 0)]
[(1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0), (0, 1, 0)]
[(1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0), (0, 1, 0)]
[(1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0), (0, 1, 0)]
[(1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0), (0, 1, 0)]
[(1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0), (0, 1, 0)]
[(1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0), (0, 1, 0)]
[(1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0), (0, 1, 0)]
[(1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0), (0, 1, 0)]
]







7 rotation not working
rotateList(self): WORKING
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
[(1, 1, 0), (0, 0, 1), (0, 1, 0), (1, 0, 0), (1, 0.64705882352, 0), (1, 1, 1)]
^^ correct

appending new colors:
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
[(1, 1, 0), (0, 0, 1), (0, 1, 0), (1, 0, 0), (1, 0.64705882352, 0), (1, 1, 1)]
^^ also correct


What actually happens (visual)
white = red
blue = yellow
red = blue
yellow = white


self written:
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
[(1, 1, 0), (0, 0, 1), (0, 1, 0), (1, 0, 0), (1, 0.64705882352, 0), (1, 1, 1)]
^^^ also correct????

what should happen
white = yellow
blue = red
red = blue
yellow = white

self written:
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
[(1, 0, 0), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 1, 1)]
^^^ also correct????



new:

BEFORE
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
AFTER
[(1, 1, 0), (0, 0, 1), (0, 1, 0), (1, 0, 0), (1, 0.64705882352, 0), (1, 1, 1)]


SHOULD BE

(self written)
BEFORE
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
AFTER
OLD*************[(1, 1, 0), (0, 0, 1), (0, 1, 0), (1, 0, 0), (1, 0.64705882352, 0), (1, 1, 1)]
SELF WRITTEN NEW[(1, 1, 0), (1, 1, 1), (0, 1, 0), (0, 0, 1), (1, 0.64705882352, 0), (1, 0, 0)]





new new: [0,5,1,3]

[(0, 0, 1), (1, 1, 0), (1, 0, 0), (1, 1, 1)]
[(1, 1, 1), (0, 0, 1), (1, 1, 0), (1, 0, 0)]
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]


new new new with reverse into [0,1,3,5]

[(0, 0, 1), (1, 1, 0), (1, 0, 0), (1, 1, 1)]
[(1, 1, 1), (0, 0, 1), (1, 1, 0), (1, 0, 0)]
[(1, 1, 1), (1, 1, 0), (1, 0, 0), (0, 0, 1)]
[(1, 1, 1), (1, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0.64705882352, 0), (0, 0, 1)]

BEFORE
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
AFTER
[(1, 1, 1), (1, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0.64705882352, 0), (0, 0, 1)]

















what [0, 5, 1, 3]
length 3
    0		1	  2	      3			4		5
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
colors [(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
x (0, 1, 0)
y (1, 0.64705882352, 0)
	0	  3	     1		5
z [(0, 0, 1), (1, 1, 0), (1, 0, 0), (1, 1, 1)]
w (0, 0, 1)
	3	  1	     5
z [(1, 1, 0), (1, 0, 0), (1, 1, 1)]
	3	  1	     5		0
z [(1, 1, 0), (1, 0, 0), (1, 1, 1), (0, 0, 1)]
w (1, 1, 0)
	1	  5	     0
z [(1, 0, 0), (1, 1, 1), (0, 0, 1)]
	1	  5	     0		3
z [(1, 0, 0), (1, 1, 1), (0, 0, 1), (1, 1, 0)]
w (1, 0, 0)
       5	  0	     3
z [(1, 1, 1), (0, 0, 1), (1, 1, 0)]
       5	  0	     3		1
z [(1, 1, 1), (0, 0, 1), (1, 1, 0), (1, 0, 0)]
	0	  1	     2		3		4		  5
z [(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
newcolors:
     0		1	   2	     3		       4		5
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
end
colors [(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
x (0, 1, 0)
y (1, 0.64705882352, 0)
z [(0, 0, 1), (1, 1, 0), (1, 0, 0), (1, 1, 1)]
w (0, 0, 1)
z [(1, 1, 0), (1, 0, 0), (1, 1, 1)]
z [(1, 1, 0), (1, 0, 0), (1, 1, 1), (0, 0, 1)]
w (1, 1, 0)
z [(1, 0, 0), (1, 1, 1), (0, 0, 1)]
z [(1, 0, 0), (1, 1, 1), (0, 0, 1), (1, 1, 0)]
w (1, 0, 0)
z [(1, 1, 1), (0, 0, 1), (1, 1, 0)]
z [(1, 1, 1), (0, 0, 1), (1, 1, 0), (1, 0, 0)]
z [(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
newcolors:
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
end
colors [(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
x (0, 1, 0)
y (1, 0.64705882352, 0)
z [(0, 0, 1), (1, 1, 0), (1, 0, 0), (1, 1, 1)]
w (0, 0, 1)
z [(1, 1, 0), (1, 0, 0), (1, 1, 1)]
z [(1, 1, 0), (1, 0, 0), (1, 1, 1), (0, 0, 1)]
w (1, 1, 0)
z [(1, 0, 0), (1, 1, 1), (0, 0, 1)]
z [(1, 0, 0), (1, 1, 1), (0, 0, 1), (1, 1, 0)]
w (1, 0, 0)
z [(1, 1, 1), (0, 0, 1), (1, 1, 0)]
z [(1, 1, 1), (0, 0, 1), (1, 1, 0), (1, 0, 0)]
z [(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
newcolors:
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
end
colors [(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
x (0, 1, 0)
y (1, 0.64705882352, 0)
z [(0, 0, 1), (1, 1, 0), (1, 0, 0), (1, 1, 1)]
w (0, 0, 1)
z [(1, 1, 0), (1, 0, 0), (1, 1, 1)]
z [(1, 1, 0), (1, 0, 0), (1, 1, 1), (0, 0, 1)]
w (1, 1, 0)
z [(1, 0, 0), (1, 1, 1), (0, 0, 1)]
z [(1, 0, 0), (1, 1, 1), (0, 0, 1), (1, 1, 0)]
w (1, 0, 0)
z [(1, 1, 1), (0, 0, 1), (1, 1, 0)]
z [(1, 1, 1), (0, 0, 1), (1, 1, 0), (1, 0, 0)]
z [(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
newcolors:
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]
end








old/new:
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
     0		1	   2	     3		       4		5
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]





indexes [3, 0, 2, 5, 4, 1]

     0		1	   2	      3			4		5
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
     3		0	   2	      5			4		1
[(1, 1, 1), (0, 0, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]

yellow should be red
blue should be yellow
red should be blue
white should be white

     3		5	   2	      1			4		0
[(1, 1, 1), (1, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0.64705882352, 0), (0, 0, 1)]



[3, 5, 1, 0]:
     0		1	   2	      3			4		5
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
indexes [0, 3, 2, 5, 4, 1]
     0		3	   2	      5			4		1
[(0, 0, 1), (1, 1, 1), (0, 1, 0), (1, 1, 0), (1, 0.64705882352, 0), (1, 0, 0)]




[5,1,0,3]
     0		1	   2	      3			4		5
[(0, 0, 1), (1, 0, 0), (0, 1, 0), (1, 1, 1), (1, 0.64705882352, 0), (1, 1, 0)]
indexes [3, 5, 2, 1, 4, 0]
     3		5	   2	      1			4		0
[(1, 1, 1), (1, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0.64705882352, 0), (0, 0, 1)]














